apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation rootProject.ext.dependencies['kotlin-stdlib']
    implementation rootProject.ext.androidx['androidx.core']
    implementation rootProject.ext.androidx['androidx.appcompat']
    implementation project(path: ':ui-library')
    implementation project(path: ':ws-library')
    testImplementation rootProject.ext.androidx['junit']
    androidTestImplementation rootProject.ext.androidx['androidx.test.ext']
    androidTestImplementation rootProject.ext.androidx['androidx.test.espresso:espresso-core']

    implementation rootProject.ext.androidx['androidx.recyclerview']
    implementation rootProject.ext.dependencies.gson
    implementation rootProject.ext.dependencies['glide']
    implementation rootProject.ext.dependencies['glide_compiler']


    implementation rootProject.ext.kotlin['kotlinx-coroutines-core']
    implementation rootProject.ext.kotlin['kotlinx-coroutines-android']

    //在kotlin项目中配合jetpack架构引入协程
    api rootProject.ext.kotlin['lifecycle-viewmodel-ktx']
    api rootProject.ext.kotlin['lifecycle-runtime-ktx']
    api rootProject.ext.kotlin['lifecycle-livedata-ktx']
}